{"version":3,"sources":["components/Search.js","components/Table.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchEmployees","props","className","onChange","handleInputChange","value","name","type","id","axios","require","Table","useState","employees","chooseEmployees","employeesSearch","chooseEmployeesSearch","searchemployees","setSearch","useEffect","get","then","response","data","results","catch","error","Search","event","target","length","filterEmployees","filter","employee","i","last","toLowerCase","includes","striped","bordered","hover","variant","onClick","sort","a","b","map","index","src","picture","medium","alt","first","phone","email","location","city","state","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAmBeA,MAjBf,SAAyBC,GACvB,OACE,+BACE,qBAAKC,UAAU,aAAf,SACE,uBACEC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMI,MACbC,KAAK,kBACLC,KAAK,OACLL,UAAU,eACVM,GAAG,yBCRPC,EAAQC,EAAQ,IA6EPC,EA3ED,WACd,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiDF,mBAAS,IAA1D,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAqCJ,mBAAS,IAA9C,mBAAOK,EAAP,KAAwBC,EAAxB,KAmDI,OANFC,qBAAU,WACHN,GA5CLJ,EAAMW,IAAI,yCAETC,MAAK,SAAUC,GACdR,EAAkBQ,EAASC,KAAKC,SAChCR,EAAwBM,EAASC,KAAKC,YAEvCC,OAAM,SAAUC,OAEhBL,MAAK,iBAwCN,IAGF,sBAAKnB,UAAU,MAAf,UACA,cAACyB,EAAD,CAAiBtB,MAAOY,EAAiBb,kBA5BnB,SAACwB,GACrB,IAAMvB,EAAMuB,EAAMC,OAAOxB,MACzB,GAAIA,EAAMyB,OAAS,EAAG,CACpB,IAAMC,EAAkBlB,EAAUmB,QAAO,SAACC,EAASC,GACjD,OAAOD,EAAS3B,KAAK6B,KAAKC,cAAcC,SAAShC,EAAM+B,kBAEvDpB,EAAsBe,QAGxBf,EAAsBH,GAExBK,EAAUU,EAAMC,OAAOxB,UAgBzB,IAEM,eAAC,IAAD,CAAsBiC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAArD,UACJ,gCACE,+BACE,8CACA,oBAAIC,QAnBU,SAACd,GACnBZ,EACAH,EAAU8B,MAAK,SAACC,EAAGC,GAAO,OAAQD,EAAEtC,KAAK6B,KAAOU,EAAEvC,KAAK6B,KAAQ,EAAI,OAiB/D,2BACA,8CACA,uCACA,+CAGJ,gCACGpB,EAAgB+B,KApDF,SAACb,EAAUc,GAC9B,OACE,+BACE,6BAAI,qBAAKC,IAAKf,EAASgB,QAAQC,OAAQC,IAAI,OAC3C,uCAAQlB,EAAS3B,KAAK8C,MAAtB,YAA+BnB,EAAS3B,KAAK6B,QAC7C,uCAAQF,EAASoB,SACjB,uCAAQpB,EAASqB,SACjB,uCAAQrB,EAASsB,SAASC,KAA1B,aAAmCvB,EAASsB,SAASE,WAL9CV,eCjBEW,EANA,SAACzD,GACZ,OACJ,qBAAKC,UAAU,SAAf,uCCSeyD,MATf,WACE,OACE,sBAAKzD,UAAU,MAAf,UACE,cAAC,EAAD,IADF,IAEE,cAAC,EAAD,QCIS0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.151f7a49.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchEmployees(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          name=\"searchemployees\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"searchemployees\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchEmployees;","import React, {useEffect, useState} from 'react';\r\nimport '../App';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport SearchEmployees from './Search.js';\r\nconst axios = require('axios');\r\n\r\nconst Table = () => {\r\nconst [employees, chooseEmployees] = useState([])\r\nconst [employeesSearch, chooseEmployeesSearch] = useState([])\r\nconst [searchemployees, setSearch] = useState(\"\")\r\n  const getEmployees = () =>{\r\n    axios.get('https://randomuser.me/api/?results=10')\r\n\r\n    .then(function (response) {\r\n      chooseEmployees ( response.data.results )\r\n      chooseEmployeesSearch ( response.data.results )\r\n    })\r\n    .catch(function (error) {\r\n    })\r\n    .then(function () {\r\n    });\r\n  }\r\n\r\nconst showEmployee = (employee, index) => {\r\n  return(\r\n    <tr key={index}>\r\n      <td><img src={employee.picture.medium} alt=\"\"/></td>\r\n      <td>{`${employee.name.first} ${employee.name.last}`}</td>\r\n      <td>{`${employee.phone}`}</td>\r\n      <td>{`${employee.email}`}</td>\r\n      <td>{`${employee.location.city}, ${employee.location.state}`}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst handleInputChange=(event) => {\r\n    const value=event.target.value\r\n    if (value.length > 0) {\r\n      const filterEmployees = employees.filter((employee,i)=>{\r\n        return employee.name.last.toLowerCase().includes(value.toLowerCase())\r\n        })\r\n        chooseEmployeesSearch(filterEmployees)\r\n    }\r\n    else {\r\n      chooseEmployeesSearch(employees)\r\n    }\r\n    setSearch(event.target.value)\r\n  }\r\n  \r\n  const handleClick = (event) => {\r\n    chooseEmployeesSearch(\r\n    employees.sort((a, b) => {return (a.name.last > b.name.last) ? 1 : 0}))\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (!employees) {\r\n      return;\r\n    }\r\n  getEmployees()\r\n  },[]) \r\n    return (\r\n     \r\n  <div className=\"App\">\r\n  <SearchEmployees value={searchemployees} handleInputChange={handleInputChange}/>;\r\n        <ReactBootStrap.Table striped bordered hover variant=\"dark\">\r\n    <thead>\r\n      <tr>\r\n        <th>Employee Pic</th>\r\n        <th onClick={handleClick}>Employee Name</th>\r\n        <th>Phone Number</th>\r\n        <th>Email</th>\r\n        <th>Location</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {employeesSearch.map(showEmployee)}\r\n    </tbody>\r\n  </ReactBootStrap.Table>\r\n      </div>\r\n     );\r\n}\r\nexport default Table;","\r\nimport React from \"react\";\r\nconst Header = (props) => {\r\n    return (\r\n<div className=\"header\">React Employee Directory\r\n</div>\r\n);\r\n}\r\nexport default Header;","import './App.css';\nimport Table from './components/Table';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />;\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}